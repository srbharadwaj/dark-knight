/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewGameDialog.java
 *
 * Created on 26 Aug, 2010, 6:24:21 PM
 */

package srb;

import javax.swing.JOptionPane;

/**
 *
 * @author suhas
 */
public class NewGameDialog extends javax.swing.JDialog implements CConst {

    /** Creates new form NewGameDialog */
    public NewGameDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        whiteComboBox = new javax.swing.JComboBox();
        blackComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        whitePlayersName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        blackPlayersName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        depthComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Game : "+ TITLE);

        jLabel1.setText("WHITE : ");

        jLabel2.setText("BLACK : ");

        whiteComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HUMAN", "COMPUTER" }));
        whiteComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                whiteComboBoxItemStateChanged(evt);
            }
        });

        blackComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HUMAN", "COMPUTER" }));
        blackComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                blackComboBoxItemStateChanged(evt);
            }
        });

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Player1's Name : ");

        whitePlayersName.setText("Player1");

        jLabel4.setText("Player2's Name : ");

        blackPlayersName.setText("Player2");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Depth"));

        depthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17" }));
        depthComboBox.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(depthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(depthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(whiteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(whitePlayersName, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blackPlayersName, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(whiteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(whitePlayersName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(blackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(blackPlayersName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void whiteComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_whiteComboBoxItemStateChanged
        // TODO add your handling code here:
        depthComboBox.setSelectedIndex(0);
        if(whiteComboBox.getSelectedItem().equals(HUMAN)) {
            whitePlayersName.setText("Player1");
            depthComboBox.setEnabled(false);
        }
        else  {
            whitePlayersName.setText(COMPUTERNAME);
            depthComboBox.setEnabled(true);
        }
    }//GEN-LAST:event_whiteComboBoxItemStateChanged

    private void blackComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_blackComboBoxItemStateChanged
        // TODO add your handling code here:
        depthComboBox.setSelectedIndex(0);
       if(blackComboBox.getSelectedItem().equals(HUMAN)) {
            blackPlayersName.setText("Player2");
            depthComboBox.setEnabled(false);
        }
        else  {
            blackPlayersName.setText(COMPUTERNAME);
            depthComboBox.setEnabled(true);
        }
    }//GEN-LAST:event_blackComboBoxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if((whiteComboBox.getSelectedItem().equals(COMPUTER)) &&
                (blackComboBox.getSelectedItem().equals(COMPUTER))) {

            JOptionPane.showMessageDialog(this,"You cannot play COMPUTER vs COMPUTER !!! \n"
                    + "It has to be either HUMAN vs COMPUTER or HUMAN vs HUMAN","Game not possible!!!",JOptionPane.ERROR_MESSAGE);
        } else if((whitePlayersName.getText().trim().equals("")) ||
                    (blackPlayersName.getText().trim().equals(""))) {
               JOptionPane.showMessageDialog(this,"Players name cannot be left blank !!! \n"
                    + "Please enter the white and black players name","Game not possible!!!",JOptionPane.ERROR_MESSAGE);
        } else
        {
            white = (String) whiteComboBox.getSelectedItem();
            black = (String) blackComboBox.getSelectedItem();
            whitename = whitePlayersName.getText().trim();
            blackname= blackPlayersName.getText().trim();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewGameDialog dialog = new NewGameDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public String white,black,whitename,blackname,depth;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox blackComboBox;
    private javax.swing.JTextField blackPlayersName;
    private javax.swing.JComboBox depthComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox whiteComboBox;
    private javax.swing.JTextField whitePlayersName;
    // End of variables declaration//GEN-END:variables

}
